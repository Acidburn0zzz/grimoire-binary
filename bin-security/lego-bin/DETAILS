           SPELL=lego-bin
          SPELLX=${SPELL/-bin/}
         VERSION=0.3.1
if [[ ${SMGL_COMPAT_ARCHS[1]} == "x86_64" ]]; then
            ARCH=amd64
     SOURCE_HASH=sha512:42ce7e44648665654cb18625f35bea51ec6d99550e4d53b6805e707f000aad2ef930a8bc7eda3cb6b66461575725dd98b694529bc98c1bec2061652442ce2752
else
            ARCH=386
     SOURCE_HASH=sha512:743a7b085c79609fb1553bbb482f3346f132affd4177e56ab7be38b35a9bef09c5d3a60cf7f47fcd13c547844d8133fa7f276a1340e23abd7b0b2912fe4d86f1
fi
          SOURCE=${SPELLX}_${VERSION}_linux_${ARCH}.tar.xz
   SOURCE_URL[0]=https://github.com/xenolf/${SPELLX}/releases/download/v${VERSION}/${SPELLX}_linux_${ARCH}.tar.xz
SOURCE_DIRECTORY="${BUILD_DIRECTORY}/${SPELLX}"
        WEB_SITE=https://github.com/xenolf/lego
         ENTERED=20160910
      LICENSE[0]=MIT
           SHORT="Let's Encrypt client and ACME library written in Go"
cat << EOF
lego is Let's Encrypt client and ACME library written in Go.

Features:
* Register with CA
* Obtain certificates, both from scratch or with an existing CSR
* Renew certificates
* Revoke certificates
* Robust implementation of all ACME challenges
  o HTTP (http-01)
  o TLS with Server Name Indication (tls-sni-01)
  o DNS (dns-01)
* SAN certificate support
* Comes with multiple optional DNS providers
* Custom challenge solvers
* Certificate bundling
* OCSP helper function
EOF
